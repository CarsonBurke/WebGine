/*IMPORTANT*/

@import url('https://fonts.googleapis.com/css2?family=Raleway:wght@100;200;300;400;500;600;700;800;900&display=swap');
@font-face {
    font-family: 'Material Icons';
    font-style: normal;
    font-weight: 300;
    src: local('Material Icons'), local('MaterialIcons-Regular'), url(https://example.com/MaterialIcons-Regular.woff2) format('woff2'), url(https://example.com/MaterialIcons-Regular.woff) format('woff'), url(https://example.com/MaterialIcons-Regular.ttf) format('truetype');
}

body {
    padding: 0;
    margin: 0;
    scroll-behavior: smooth;
    overflow-x: hidden;
    font-family: "Raleway";
    background: var(--secondaryShade);
    color: white;
    --primary: rgb(211, 13, 13);
    --primaryShade: white;
    --secondaryShade: rgb(51, 48, 54);
    --tertiaryShade: rgb(32, 32, 39);
}

body::-webkit-scrollbar {
    width: 14px;
    background: #e3e9f0;
}

body::-webkit-scrollbar-thumb {
    background: #36394550;
    width: 100%;
}

body::-webkit-scrollbar-thumb:hover {
    background: #36394580;
}

* {
    all: unset;
}

title {
    display: none;
}

style {
    display: none;
}


/* Content */

.envParent {
    display: flex;
    justify-content: center;
    align-items: center;
    min-height: 100vh;
    background-color: var(--tertiaryShade);
    gap: 20px;
}

.env {
    box-shadow: rgba(0, 0, 0, 0.3) 0 0 80px 0;
    background: var(--secondaryShade);
    z-index: 1;
    height: fit-content;
}

.displayParent {
    display: flex;
    flex-direction: column;
    gap: 20px;
}

.displayChild {
    padding: 20px;
    gap: 20px;
    display: flex;
    justify-content: center;
    flex-direction: column;
    box-shadow: rgba(0, 0, 0, 0.3) 0 0 80px 0;
    background: var(--secondaryShade);
}

.envIcon {
    width: 50px;
    height: 50px;
    border-radius: 100%;
    box-shadow: rgba(0, 0, 0, 0.3) 0 0 20px 0;
}

.envTitle {
    gap: 5px;
    display: flex;
    justify-content: center;
    align-items: center;
    font-size: 35px;
    font-weight: 800;
    text-align: center;
    letter-spacing: 1px;
    user-select: none;
}

.statsParent {
    display: flex;
    flex-direction: column;
    gap: 10px;
}

.statsChild {
    display: flex;
    gap: 10px;
}

.statsHeader {
    font-weight: 500;
}

.statsAmount {
    font-weight: 200;
}

.changeParent {
    display: flex;
    justify-content: center;
    border-radius: 30px;
}

.changeInput {
    border-top-left-radius: 30px;
    border-bottom-left-radius: 30px;
    padding: 6px;
    padding-left: 15px;
    font-size: 16px;
    width: 130px;
    border: var(--tertiaryShade) 2px solid;
    user-select: none;
    transition: all 0.3s;
}

.changeInput::placeholder {
    color: rgba(255, 255, 255, 0.6);
}

.changeInput:hover {
    box-shadow: rgba(0, 0, 0, 0.3) 0 4px 20px 0;
}

.changeInput:focus {
    box-shadow: rgba(0, 0, 0, 0.3) 0 12px 20px 0;
}

.changeButton {
    border-top-right-radius: 30px;
    border-bottom-right-radius: 30px;
    background-color: var(--tertiaryShade);
    padding: 8px 20px;
    cursor: pointer;
    user-select: none;
    transition: all 0.3s;
}

.changeButton:hover {
    box-shadow: rgba(0, 0, 0, 0.3) 0 4px 20px 0;
}

.changeButton:focus {
    box-shadow: rgba(0, 0, 0, 0.3) 0 12px 20px 0;
}


/* Neural Network */

.networkVisualsParent {
    padding: 0 80px;
    gap: 160px;
    display: flex;
}

.visualsParent {
    position: relative;
    width: fit-content;
    display: flex;
    pointer-events: none;
}

.visualsParentHide {
    display: none;
}

.layerVisual {
    width: 100%;
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
}

.perceptronVisual {
    background: rgb(28, 238, 0);
    box-shadow: rgba(0, 0, 0, 0.3) 0 0 20px 0;
    border-radius: 100%;
    width: 50px;
    height: 50px;
    margin: 5px 0;
    display: flex;
    justify-content: center;
    align-items: center;
    font-size: 16px;
    color: black;
    position: relative;
    outline: 1.9px solid rgb(255, 255, 255);
}

.inputPerceptron {
    background: rgb(255, 187, 0);
}

.outputPerceptron {
    background: rgb(250, 15, 15);
}

.textVisual {
    font-size: 14px;
    color: rgb(255, 255, 255);
    position: absolute;
    width: fit-content;
}

.lineParent {
    position: absolute;
    height: 100%;
    width: 100%;
}

.line {
    stroke-width: 1.5px;
}

.lineDisconnected {
    opacity: 0;
}